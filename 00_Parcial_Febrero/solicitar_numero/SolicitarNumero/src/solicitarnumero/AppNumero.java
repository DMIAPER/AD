/**
 * Examen parcial Febrero - Apartado 1.
 * 
 * En este apartado se diseñará una interfaz gráfica con tres botones.
 * 
 * El primer botón mostrará un mensaje por pantalla solicitando un número que introducirá
 * el usuario a través del teclado. 
 * 
 * El segundo botón estará desactivado desde el inicio, el cual una vez se haya insertado un número
 * se activará automáticamente y mostrará los datos que esten almacenados en el fichero.
 * 
 * El tercer botón estará activo desde el principio permitirá cerrar la aplicación, pero antes de
 * finalizar la aplicación deberá cerrar el fichero. Antes de cerrar se a de mostrar un jOptionPanne 
 * preguntan al usuario si esta seguro de cerrar la aplicación, y si confirma que desea salir se 
 * cerrar la aplicación.
 * 
 * El botón "X" que se encuentra en la parte superior tendrá la misma función que el botón cerrar 
 * que se ha indicado anteriormente.
 * 
 * @Author DMIAPER (Diógenes Miaja Pérez)
 * Fecha: 27-04-2025
 * Versión: 1.0.0
 * 
 */
package solicitarnumero;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.Scanner;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author dmiap
 */
public class AppNumero extends javax.swing.JFrame {
    
    File fichero = new File("src"+File.separator+"fichero"+File.separator+"Numeros.txt");

    /**
     * Constructor
     */
    public AppNumero() {
        initComponents();
        //Se inicia el método para poder cerrar la app con nuestro método
        cerrarX();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbSalir = new javax.swing.JButton();
        jbSolicitarNum = new javax.swing.JButton();
        jbMostrarNums = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jbSalir.setText("SALIR");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbSolicitarNum.setText("SOLICITAR NÚMERO");
        jbSolicitarNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSolicitarNumActionPerformed(evt);
            }
        });

        jbMostrarNums.setText("MOSTRAR NÚMEROS");
        jbMostrarNums.setEnabled(false);
        jbMostrarNums.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMostrarNumsActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Introduzca un número por consola");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jbSalir)
                                .addGap(38, 38, 38))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbSolicitarNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbMostrarNums, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(44, 44, 44))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(85, 85, 85))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jbSolicitarNum)
                .addGap(18, 18, 18)
                .addComponent(jbMostrarNums)
                .addGap(26, 26, 26)
                .addComponent(jbSalir)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método para cuando se pulse el botón salir finalice la aplicación 
     * si el usuario indica que quiere finalizarla tras el joptionpanne
     * @param evt 
     */
    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        //Se llama a la función cerrarApp()
        cerrarApp();
    }//GEN-LAST:event_jbSalirActionPerformed

    /**
     * Método para que cuando se pulse el botón de solicitar un número
     * se muestre por consola un mensaje para que el usuario introduzca un 
     * número entero. 
     * Se controlará que el número introducido es de tipo entero, si no se volverá a solicitar 
     * un número.
     * si el valor introducido es de tipo entero se registrará en el fichero.
     * @param evt 
     */
    private void jbSolicitarNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSolicitarNumActionPerformed
        //Se instancia un scanner para recibir un número.
        Scanner scanner =new Scanner(System.in);
        //Mensaje para indciar al usuario que introduca un número
        System.out.print("Introduzca un número: ");
        //Se recibe lo que haya escrito el usuario
        String numero = scanner.next();
        //Si el usuario a introducido un valor entero
        if(numero.matches("\\d+")){
            //Se informa que el valor introducido es
            System.out.println("El número introducido es un valor entero: "+numero);
            //Se convierte el valor en un tipo entero
            int num = Integer.parseInt(numero);
            //Se obtiene el path del fichero.
            String path = FileHandler.fileHandler(fichero);
            //Se llama al método para guardar el número dentro del fichero.
            FileHandler.guardarNumeros(path, num);
            //Se activa el botón mostrar datos;
            jbMostrarNums.setEnabled(true);
        }else{
            //Se informa que el valor introducido no es un valor valido
            System.out.println("No se ha introducido un número entero, ni positivo. Vuelva a pulsar el botón.");
        }
       
    }//GEN-LAST:event_jbSolicitarNumActionPerformed

    /**
     * Método para mostrar los datos que contiene el fichero Numeros.txt
     * @param evt 
     */
    private void jbMostrarNumsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMostrarNumsActionPerformed
        //Se obtiene el path del fichero
        String path = FileHandler.fileHandler(fichero);
        //Se llama al método para mostrar todos los registrosde del fichero.
        FileHandler.leerFichero(path);
    }//GEN-LAST:event_jbMostrarNumsActionPerformed

    /**
     * Método para cerrar la aplicación desde el botón X del JFrame
     */
    public void cerrarX(){
        //Se capturan los errores para el método
        try{
            //se configura el biotón x sin función
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            //Se añade evento listener para cuando se presiono el bóton se realice
            // una tarea
            addWindowListener(new WindowAdapter(){
                //Se llama al método windowClosing
                public void windowClosing(WindowEvent e){
                    //Se llama al método cerrarApp() que se ha desarrollo
                    cerrarApp();
                }
            });
        }catch(Exception e){
            System.err.println("Se ha producido un error: "+e);
        }
    }
    
    /**
     * Métdo para cerrar la aplicación
     */
    public void cerrarApp(){
        int confirmacion = JOptionPane.showConfirmDialog(this, "¿Deseas cerrar la aplicación?", "Advertencia", JOptionPane.YES_OPTION);
        if(confirmacion == JOptionPane.YES_OPTION){
            //Se finaliza la aplicación
            System.exit(0);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppNumero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppNumero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppNumero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppNumero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppNumero().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jbMostrarNums;
    private javax.swing.JButton jbSalir;
    private javax.swing.JButton jbSolicitarNum;
    // End of variables declaration//GEN-END:variables
}
